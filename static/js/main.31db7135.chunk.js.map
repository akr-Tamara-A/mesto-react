{"version":3,"sources":["images/logo.svg","components/Header/Header.jsx","contexts/CurrentUserContext.js","components/Card/Card.jsx","components/Spinner/Spinner.jsx","components/Main/Main.jsx","components/Footer/Footer.jsx","components/Popups/ImagePopup.jsx","components/Popups/PopupWithForm.jsx","components/Input/Input.jsx","components/Popups/EditProfilePopup.jsx","components/Popups/EditAvatarPopup.jsx","components/Popups/AddPlacePopup.jsx","utils/Api.js","components/App/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","src","logoPath","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","tabIndex","onClick","onCardClick","type","title","onCardLike","length","onCardDelete","Spinner","Main","onEditAvatar","avatar","about","onEditProfile","onAddPlace","isCardsLoading","cards","map","key","Footer","ImagePopup","id","onClose","PopupWithForm","isOpen","action","noValidate","onSubmit","children","submitValue","Input","forwardRef","ref","isRequired","rest","required","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","handleOnChangeName","useCallback","evt","target","value","handleOnChangeDescription","handleSubmit","preventDefault","minLength","maxLength","pattern","placeholder","onChange","EditAvatarPopup","onUpdateAvatar","inputRef","createRef","current","AddPlacePopup","setTitle","setLink","handleChangeTitle","handleChangeLink","api","options","this","_baseUrl","baseUrl","headers","fetch","then","res","ok","json","Promise","reject","status","catch","err","console","log","data","method","body","JSON","stringify","cardId","cardID","authorization","App","setCurrentUser","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","setCards","selectedCard","setSelectedCard","setCardsIsLoading","editAvatar","editUserInfo","addCards","confirmDeletion","submitButtonValues","setSubmitButtonValues","getUserInfo","getInitialCards","finally","closeAllPopups","Provider","handleCardClick","currentCard","user","changeLikeCardStatus","newCard","newCards","handleCardLike","deleteCard","filter","patchUserInfo","patchUserAvatar","postNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.31db7135.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";","import React from 'react';\r\nimport logoPath from '../../images/logo.svg';\r\n\r\n/** Компонент \"Хедер\" */\r\nexport default function Header() {\r\n  /** Разметка хедера */\r\n  return (\r\n    <header className=\"header page__header page__section\">\r\n      <a href=\"https://akr-tamara-a.github.io/mesto/index.html\" className=\"header__logo-link\">\r\n        <img src={logoPath} alt=\"logo\" className=\"logo header__logo\" />\r\n      </a>\r\n      <h1 className=\"header__title\">Сервис Mesto Russia</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React, { useContext } from \"react\";\r\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\r\n\r\n/** Компонент \"Карточка\" */\r\nexport default function Card(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  /** Функция обработки клика по карточке */\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  /** Функция обработки лайка карточки */\r\n  function handleLike() {\r\n    props.onCardLike(props.card);\r\n  }\r\n\r\n  /** Функция обработки удаления карточки */\r\n  function handleDelete() {\r\n    props.onCardDelete(props.card);\r\n  }\r\n\r\n  /** Проверка если создатель карточки - текущий пользователь */\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n\r\n  /** Переменная со стиля для кнопки удаления карточки */\r\n  const cardDeleteButtonClassName = `\r\n      element__delete \r\n      button \r\n      button_style_secondary \r\n      button_type_delete\r\n      ${!isOwn ? \"element__delete_hidden\" : null}`;\r\n\r\n  /** Проверка есть ли у карточки лайк, поставленный текущим пользователем */\r\n  const isLiked = props.card.likes.some((i) => i._id === currentUser._id);\r\n\r\n  /** Переменная со стиля для кнопки лайка карточки */\r\n  const cardLikeButtonClassName = `\r\n    button \r\n    button_type_no-like \r\n    element__like-button \r\n    button_style_secondary\r\n    ${isLiked ? \"button_type_like\" : \"button_type_no-like\"}\r\n    `;\r\n\r\n  /** Разметка карточки */\r\n  return (\r\n    <li className=\"elements__item element\">\r\n      <figure className=\"element__wrapper\">\r\n        <div className=\"element__head\">\r\n          <img\r\n            src={props.card.link}\r\n            alt={props.card.name}\r\n            tabIndex=\"0\"\r\n            onClick={handleClick}\r\n            className=\"element__image\"\r\n          />\r\n        </div>\r\n        <figcaption className=\"element__figcaption\">\r\n          <h3 className=\"element__title\">{props.card.name}</h3>\r\n          <div className=\"element__like\">\r\n            <button\r\n              type=\"button\"\r\n              title=\"Добавь лайк\"\r\n              className={cardLikeButtonClassName}\r\n              onClick={handleLike}\r\n            />\r\n            <p className=\"element__like-counter\">{props.card.likes.length}</p>\r\n          </div>\r\n        </figcaption>\r\n      </figure>\r\n      <button\r\n        type=\"button\"\r\n        title=\"Удалить фото\"\r\n        className={cardDeleteButtonClassName}\r\n        onClick={handleDelete}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n","import React from 'react'; \r\nimport './Spinner.css'; \r\n \r\n/** Компонент \"Спиннер\" */ \r\nexport default function Spinner() { \r\n  /** Разметка спиннера */ \r\n  return ( \r\n    <div className=\"spinner\"> \r\n      <div className=\"spinner__item\"></div> \r\n    </div> \r\n  ); \r\n} ","import React, { useContext } from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\n/** Компонент \"Контент страницы\" */\r\nexport default function Main(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  /** Разметка контента страницы */\r\n  return (\r\n    <main className=\"content page__content\">\r\n      <div className=\"profile page__section\">\r\n        <div className=\"profile__container\">\r\n          <div className=\"profile__userpic\">\r\n            <div\r\n              className=\"profile__edit\"\r\n              onClick={props.onEditAvatar}\r\n              tabIndex=\"0\"\r\n            ></div>\r\n            <img\r\n              src={currentUser && currentUser.avatar}\r\n              alt=\"Аватар автора\"\r\n              className=\"profile__image\"\r\n            />\r\n          </div>\r\n          <div className=\"profile__user\">\r\n            <h2 className=\"profile__user-name\">{currentUser && currentUser.name}</h2>\r\n            <p className=\"profile__user-job\">{currentUser && currentUser.about}</p>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            title=\"Редактирование профиля\"\r\n            onClick={props.onEditProfile}\r\n            className=\"button button_type_edit-profile button_style_primary\"\r\n          />\r\n        </div>\r\n        <div className=\"profile__add-post\">\r\n          <button\r\n            type=\"button\"\r\n            title=\"Добавить фото\"\r\n            onClick={props.onAddPlace}\r\n            className=\"button button_type_add-photo button_style_primary\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"elements page__section\">\r\n        <ul className=\"elements__container\">\r\n          {props.isCardsLoading \r\n            ? <Spinner />\r\n            : props.cards.map((card) => {\r\n              return (\r\n                <Card \r\n                  card={card} \r\n                  key={card._id} \r\n                  onCardClick={props.onCardClick} \r\n                  onCardLike={props.onCardLike} \r\n                  onCardDelete={props.onCardDelete}/>\r\n              );\r\n            })\r\n          }\r\n        </ul>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n/** Компонент \"Футер\" */\r\nexport default function Footer() {\r\n  /** Разметка футера */\r\n  return (\r\n    <footer className=\"footer page__footer page__section\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\n\r\n/** Компонент \"Попап просмотра фото\" */\r\nexport default function ImagePopup(props) {\r\n  /** Разметка попапа просмотра фото */\r\n  return (\r\n    <div id=\"popupViewPhoto\" className={`popup popup_style_view ${props.card && \"popup_opened\"}`}>\r\n      <div className=\"popup__container\">\r\n        <button\r\n          name=\"viewPhotoClose\"\r\n          type=\"button\"\r\n          title=\"Закрыть окно\"\r\n          onClick={props.onClose}\r\n          className=\"popup__close\"\r\n        />\r\n        <div className=\"popup__view\">\r\n          <img \r\n            src={props.card && props.card.link} \r\n            alt={props.card && props.card.name} \r\n            className=\"popup__photo\" />\r\n          <p className=\"popup__photo-title\">{props.card && props.card.name}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React from \"react\";\r\n\r\n/** Компонент \"Попап с формой\" */\r\nexport default function PopupWithForm(props) {\r\n\r\n  /** Разметка попапа с формой */\r\n  return (\r\n    <div\r\n      id={props.name}\r\n      className={`popup popup_style_form ${props.isOpen && \"popup_opened\"}`}\r\n    >\r\n      <div className=\"popup__container\">\r\n        <button\r\n          name=\"editProfileClose\"\r\n          type=\"button\"\r\n          title=\"Закрыть окно\"\r\n          onClick={props.onClose}\r\n          className=\"popup__close\"\r\n        />\r\n        <form\r\n          action=\"#\"\r\n          name={props.name}\r\n          noValidate\r\n          onSubmit={props.onSubmit}\r\n          className=\"popup__form\"\r\n        >\r\n          <h2 className=\"popup__title\">{props.title}</h2>\r\n          {props.children}\r\n          <button\r\n            name={`${props.name}Submit`}\r\n            type=\"submit\"\r\n            className=\"popup__submit\"\r\n          >\r\n            {props.submitValue}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { forwardRef } from \"react\";\r\n\r\n/** Компонент \"Инпут\" */\r\nconst Input = forwardRef(({ name, isRequired, ...rest }, ref) => {\r\n  /** Разметка инпута */\r\n  return (\r\n    <label className=\"popup__form-field\">\r\n      <input\r\n        ref={ref}\r\n        id={`input-${name}`}\r\n        required={isRequired}\r\n        {...rest}\r\n        className=\"popup__input\"\r\n      />\r\n      <span id={`input-${name}-error`} className=\"popup__input-error\"></span>\r\n    </label>\r\n  );\r\n});\r\nexport default Input;\r\n","import React, { useState, useContext, useCallback, useEffect } from 'react';\r\nimport PopupWithForm from \"../Popups/PopupWithForm\";\r\nimport Input from \"../Input/Input\";\r\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\r\n\r\n\r\n/** Компонент \"Попап редактирование профиля\" */\r\nexport default function EditProfilePopup({onUpdateUser, ...props}) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setName(currentUser.name || '');\r\n      setDescription(currentUser.about || '');\r\n    }\r\n  }, [currentUser]);\r\n\r\n\r\n  const handleOnChangeName = useCallback(evt => {\r\n    setName(evt.target.value);\r\n  }, [setName]);\r\n\r\n  const handleOnChangeDescription = useCallback(evt => {\r\n    setDescription(evt.target.value);\r\n  }, [setDescription]);\r\n\r\n  const handleSubmit = useCallback((evt) => {\r\n    evt.preventDefault();\r\n\r\n    onUpdateUser({\r\n      name, \r\n      about: description});\r\n  }, [name, description, onUpdateUser]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n    name=\"editProfile\"\r\n    title=\"Редактировать профиль\"\r\n    submitValue=\"Сохранить\"\r\n    {...props}\r\n    onSubmit={handleSubmit}\r\n  >\r\n    <Input\r\n      name=\"userName\"\r\n      type=\"text\"\r\n      minLength=\"2\"\r\n      maxLength=\"40\"\r\n      pattern=\"^[A-Za-zА-Яа-яЁё\\s-]+$\"\r\n      placeholder=\"Имя пользователя\"\r\n      isRequired={true}\r\n      value={name}\r\n      onChange={handleOnChangeName}\r\n      />\r\n    <Input\r\n      name=\"userJob\"\r\n      type=\"text\"\r\n      minLength=\"2\"\r\n      maxLength=\"200\"\r\n      placeholder=\"О себе\"\r\n      isRequired={true}\r\n      value={description}\r\n      onChange={handleOnChangeDescription}\r\n    />\r\n  </PopupWithForm>\r\n  )\r\n}","import React, { useCallback, createRef } from \"react\";\r\nimport PopupWithForm from \"../Popups/PopupWithForm\";\r\nimport Input from \"../Input/Input\";\r\n\r\nexport default function EditAvatarPopup({ onUpdateAvatar, ...props}) {\r\n  const inputRef = createRef();\r\n\r\n  const handleSubmit = useCallback((evt) => {\r\n    evt.preventDefault();\r\n    onUpdateAvatar(inputRef.current.value);\r\n  }, [inputRef, onUpdateAvatar]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"editAvatar\"\r\n      title=\"Обновить аватар\"\r\n      {...props}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Input\r\n        name=\"avatar\"\r\n        type=\"url\"\r\n        placeholder=\"Ссылка на новый аватар\"\r\n        isRequired={true}\r\n        ref={inputRef}\r\n      />\r\n    </PopupWithForm>\r\n  );\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PopupWithForm from \"../Popups/PopupWithForm\";\r\nimport Input from \"../Input/Input\";\r\n\r\nexport default function AddPlacePopup({onAddPlace, ...props}) {\r\n  const [title, setTitle] = useState('');\r\n  const [link, setLink] = useState('');\r\n\r\n  const handleChangeTitle = useCallback(evt => {\r\n    setTitle(evt.target.value);\r\n  }, [setTitle]);\r\n\r\n  const handleChangeLink = useCallback(evt => {\r\n    setLink(evt.target.value);\r\n  }, [setLink]);\r\n\r\n  const handleSubmit = useCallback((evt) => {\r\n    evt.preventDefault();\r\n    onAddPlace(title, link);\r\n    setTitle('');\r\n    setLink('');\r\n  }, [title, link, onAddPlace]);\r\n\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"addPhoto\"\r\n      title=\"Новое место\"\r\n      submitValue=\"Сохранить\"\r\n      {...props}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Input\r\n        name=\"photoTitle\"\r\n        type=\"text\"\r\n        minLength=\"2\"\r\n        maxLength=\"30\"\r\n        placeholder=\"Название\"\r\n        isRequired={true}\r\n        value={title}\r\n        onChange={handleChangeTitle}\r\n      />\r\n      <Input\r\n        name=\"photoLink\"\r\n        type=\"url\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        isRequired={true}\r\n        value={link}\r\n        onChange={handleChangeLink}\r\n      />\r\n    </PopupWithForm>\r\n  );\r\n}\r\n","export default class Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this.headers = options.headers;\r\n  }\r\n\r\n  /** получить список всех карточек в виде массива (GET) */\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, { headers: this.headers })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка. Запрос не выполнен: \", err);\r\n      });\r\n  }\r\n\r\n  /** получить данные пользователя (GET) */\r\n  getUserInfo() {\r\n    return fetch(`${this._baseUrl}/users/me`, { headers: this.headers })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка. Запрос не выполнен: \", err);\r\n      });\r\n  }\r\n\r\n  /** заменить данные пользователя (PATCH) */\r\n  patchUserInfo(data) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about,\r\n      }),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  /** заменить аватар (PATCH) */\r\n  patchUserAvatar(avatar) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        avatar: avatar,\r\n      }),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  /** добавить карточку (POST) */\r\n  postNewCard(name, link) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link,\r\n      }),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  /** */\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    const method = isLiked ? \"PUT\" : \"DELETE\";\r\n    \r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: method,\r\n      headers: this.headers,\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  /** \"залайкать\" карточку (PUT) */\r\n  likeCard(cardID) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardID}`, {\r\n      method: \"PUT\",\r\n      headers: this.headers,\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  /** удалить лайк карточки (DELETE) */\r\n  unlikeCard(cardID) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardID}`, {\r\n      method: \"DELETE\",\r\n      headers: this.headers,\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  /** удалить карточку (DELETE) */\r\n  deleteCard(cardID) {\r\n    return fetch(`${this._baseUrl}/cards/${cardID}`, {\r\n      method: \"DELETE\",\r\n      headers: this.headers,\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n}\r\n\r\n/** Связь с сервером */\r\nexport const api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-14\",\r\n  headers: {\r\n    authorization: \"f7fbd0be-598d-4bc2-8963-24bc80b8013a\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"../Header/Header\";\nimport Main from \"../Main/Main\";\nimport Footer from \"../Footer/Footer\";\nimport ImagePopup from \"../Popups/ImagePopup\";\nimport PopupWithForm from \"../Popups/PopupWithForm\";\nimport EditProfilePopup from \"../Popups/EditProfilePopup\";\nimport EditAvatarPopup from \"../Popups/EditAvatarPopup\";\nimport AddPlacePopup from \"../Popups/AddPlacePopup\";\nimport { api } from \"../../utils/Api\";\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\n\n/** Основной компонент страницы */\nfunction App() {\n  const [currentUser, setCurrentUser] = useState({});\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isCardsLoading, setCardsIsLoading] = useState(false);\n  const [submitButtonValues, setSubmitButtonValues] = useState({\n    editAvatar: 'Сохранить',\n    editUserInfo: 'Сохранить',\n    addCards: 'Сохранить',\n    confirmDeletion: 'Да',\n  });\n\n  useEffect(() => {\n    /** Загрузка данных текущего пользователя с сервера */\n    api\n    .getUserInfo()\n    .then((data) => {\n      setCurrentUser(data);\n      console.log(`user info loaded`);\n      setCardsIsLoading(true);\n      /** Загрузка данных карточек с сервера */\n      api\n      .getInitialCards()\n      .then((data) => {\n        setCards(data);\n      })\n    })\n    .catch((err) => {\n      console.log(\"Ошибка. Не удалось установить новые данные: \", err);\n    })\n    .finally(() => {\n      setCardsIsLoading(false);\n      console.log(`cards info loaded`);\n        });\n    }, [setCurrentUser, setCards]);\n  \n\n  /** Функция закрытия попапов */\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n  \n  /** Обработка лайка карточки */\n  const handleCardLike = currentCard => {\n    /** Проверка лайкнута ли карточка */\n    const isLiked = currentCard.likes.some(user => user._id === currentUser._id);\n    \n    api.changeLikeCardStatus(currentCard._id, !isLiked).then((newCard) => {\n      const newCards = cards.map((card) => card._id === currentCard._id ? newCard : card);\n      setCards(newCards);\n    });\n  }\n\n  /** Обработка удаления карточки */\n  const handleCardDelete = currentCard => {\n    api.deleteCard(currentCard._id)\n    .then((res) => {\n      console.log(res);\n      const newCards = cards.filter(card => {\n        return card._id !== currentCard._id\n      });\n      setCards(newCards);\n      console.log('card deleted');\n    })\n  }\n\n\n  /** Функция обработки клика по карточке */\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  }\n\n  /** Обработка сабмита редактирования профиля пользователя */\n  const handleUpdateUser = (data) => {\n    setSubmitButtonValues({\n      ...submitButtonValues, \n      editUserInfo: 'Загружается...',\n    })\n    api.patchUserInfo(data)\n    .then(data => {\n      setCurrentUser(data);\n    })\n    .catch((err) => {\n      console.log(\"Ошибка. Не удалось установить новые данные: \", err);\n    })\n    .finally(() => {\n      console.log(`user info updates`);\n      setSubmitButtonValues({\n        ...submitButtonValues, \n        editUserInfo: 'Сохранить',\n      })\n      setIsEditProfilePopupOpen(false);\n    });\n  }\n\n  /** Обработка сабмита редактирования аватара пользователя */\n  const handleUpdateAvatar = (data) => {\n    setSubmitButtonValues({\n      ...submitButtonValues, \n      editAvatar: 'Загружается...',\n    });\n    api.patchUserAvatar(data)\n    .then(data => {\n      setCurrentUser(data);\n    })\n    .catch((err) => {\n      console.log(\"Ошибка. Не удалось установить новые данные: \", err);\n    })\n    .finally(() => {\n      console.log(`user avatar updated`);\n      setSubmitButtonValues({\n        ...submitButtonValues, \n        editAvatar: 'Сохранить',\n      })\n      setIsEditAvatarPopupOpen(false);\n    });\n  }\n  \n  /** Обработка сабмита добавления карточки */\n  const handleAddCard = (title, link) => {\n    setSubmitButtonValues({\n      ...submitButtonValues,\n      addCards: \"Загружается...\",\n    });\n    api\n      .postNewCard(title, link)\n      .then((newCard) => {\n        console.log(newCard);\n        setCards([newCard, ...cards]);\n      })\n      .catch((err) => {\n        console.log(\"Ошибка. Не удалось установить новые данные: \", err);\n      })\n      .finally(() => {\n        console.log(`new card added`);\n        setSubmitButtonValues({\n          ...submitButtonValues,\n          addCards: \"Сохранить\",\n        });\n        setIsAddPlacePopupOpen(false);\n      });\n  };\n\n  /** Основная разметка */\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__container\">\n        <Header />\n        <Main\n          cards={cards}\n          isCardsLoading={isCardsLoading}\n          onEditProfile={() => {\n            setIsEditProfilePopupOpen(true);\n          }}\n          onEditAvatar={() => {\n            setIsEditAvatarPopupOpen(true);\n          }}\n          onAddPlace={() => {\n            setIsAddPlacePopupOpen(true);\n          }}\n          onCardClick={card => {\n            handleCardClick(card);\n          }}\n          onCardLike={card => {\n            handleCardLike(card)\n          }}\n          onCardDelete={card => {\n            handleCardDelete(card)\n          }}\n        />\n        <Footer />\n        <EditProfilePopup\n          submitValue={submitButtonValues.editUserInfo}\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n          submitValue={submitButtonValues.editAvatar}\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <AddPlacePopup\n          submitValue={submitButtonValues.addCards}\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddCard}\n        />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        <PopupWithForm\n          name=\"deleteCard\"\n          title=\"Вы уверены?\"\n          submitValue={submitButtonValues.confirmDeletion}\n          isOpen={false}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}