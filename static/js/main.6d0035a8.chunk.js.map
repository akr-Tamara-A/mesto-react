{"version":3,"sources":["images/logo.svg","components/Header/Header.jsx","components/Card/Card.jsx","components/Spinner/Spinner.jsx","utils/Api.js","components/Main/Main.jsx","components/Footer/Footer.jsx","components/Popups/ImagePopup.jsx","components/Popups/PopupWithForm.jsx","components/Input/Input.jsx","components/App/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","src","logoPath","alt","Card","props","card","link","name","tabIndex","onClick","onCardClick","type","title","likes","length","Spinner","api","options","this","_baseUrl","baseUrl","headers","fetch","then","res","ok","json","Promise","reject","status","catch","err","console","log","about","method","body","JSON","stringify","avatar","cardID","authorization","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","isLoading","setIsLoading","cards","setCards","useEffect","getUserInfo","data","finally","getInitialCards","onEditAvatar","onEditProfile","onAddPlace","map","key","_id","Footer","ImagePopup","id","onClose","PopupWithForm","isOpen","action","noValidate","onSubmit","children","value","submitValue","Input","required","isRequired","minLength","maxLength","pattern","placeholder","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","closeAllPopups","handleCardClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6d0035a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";","import React from 'react';\r\nimport logoPath from '../../images/logo.svg';\r\n\r\n/** Компонент \"Хедер\" */\r\nexport default function Header() {\r\n  /** Разметка хедера */\r\n  return (\r\n    <header className=\"header page__header page__section\">\r\n      <a href=\"#\" className=\"header__logo-link\">\r\n        <img src={logoPath} alt=\"logo\" className=\"logo header__logo\" />\r\n      </a>\r\n      <h1 className=\"header__title\">Сервис Mesto Russia</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\n\r\n/** Компонент \"Карточка\" */\r\nexport default function Card(props) {\r\n  /** Функция обработки клика по карточке */\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  } \r\n\r\n  /** Разметка карточки */\r\n  return (\r\n    <li className=\"elements__item element\">\r\n      <figure className=\"element__wrapper\">\r\n        <div className=\"element__head\">\r\n          <img\r\n            src={props.card.link}\r\n            alt={props.card.name}\r\n            tabIndex=\"0\"\r\n            onClick={handleClick}\r\n            className=\"element__image\"\r\n          />\r\n        </div>\r\n        <figcaption className=\"element__figcaption\">\r\n          <h3 className=\"element__title\">{props.card.name}</h3>\r\n          <div className=\"element__like\">\r\n            <button\r\n              type=\"button\"\r\n              title=\"Добавь лайк\"\r\n              className=\"button button_type_no-like element__like-button button_style_secondary\"\r\n            />\r\n            <p className=\"element__like-counter\">{props.card.likes.length}</p>\r\n          </div>\r\n        </figcaption>\r\n      </figure>\r\n      <button\r\n        type=\"button\"\r\n        title=\"Удалить фото\"\r\n        className=\"element__delete element__delete_hidden button button_type_delete button_style_secondary\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\n/** Компонент \"Спиннер\" */\r\nexport default function Spinner() {\r\n  /** Разметка спиннера */\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"spinner__item\"></div>\r\n    </div>\r\n  );\r\n}\r\n","export default class Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this.headers = options.headers;\r\n  }\r\n\r\n  /** получить список всех карточек в виде массива (GET) */\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, { headers: this.headers })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка. Запрос не выполнен: \", err);\r\n      });\r\n  }\r\n\r\n  /** получить данные пользователя (GET) */\r\n  getUserInfo() {\r\n    return fetch(`${this._baseUrl}/users/me`, { headers: this.headers })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка. Запрос не выполнен: \", err);\r\n      });\r\n  }\r\n\r\n  /** заменить данные пользователя (PATCH) */\r\n  patchUserInfo(name, about) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about,\r\n      }),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  /** заменить аватар (PATCH) */\r\n  patchUserAvatar(avatar) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        avatar: avatar,\r\n      }),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  /** добавить карточку (POST) */\r\n  postNewCard(name, link) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link,\r\n      }),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  /** \"залайкать\" карточку (PUT) */\r\n  likeCard(cardID) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardID}`, {\r\n      method: \"PUT\",\r\n      headers: this.headers,\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  /** удалить лайк карточки (DELETE) */\r\n  unlikeCard(cardID) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardID}`, {\r\n      method: \"DELETE\",\r\n      headers: this.headers,\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  /** удалить карточку (DELETE) */\r\n  deleteCard(cardID) {\r\n    return fetch(`${this._baseUrl}/cards/${cardID}`, {\r\n      method: \"DELETE\",\r\n      headers: this.headers,\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n}\r\n\r\n\r\n/** Связь с сервером */\r\nexport const api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-14\",\r\n  headers: {\r\n    authorization: \"f7fbd0be-598d-4bc2-8963-24bc80b8013a\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport { api } from \"../../utils/Api\";\r\n\r\n/** Компонент \"Контент страницы\" */\r\nexport default function Main(props) {\r\n  const [userName, setUserName] = React.useState();\r\n  const [userDescription, setUserDescription] = React.useState();\r\n  const [userAvatar, setUserAvatar] = React.useState();\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  /** Загруза данных пользователя */\r\n  React.useEffect(() => {\r\n    setIsLoading(true);\r\n    api\r\n      .getUserInfo()\r\n      .then((data) => {\r\n        setUserName(data.name);\r\n        setUserDescription(data.about);\r\n        setUserAvatar(data.avatar);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка. Не удалось установить новые данные: \", err);\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  }, [setUserName, setUserDescription, setUserAvatar]);\r\n\r\n  /** Загрузка массива карточек */\r\n  React.useEffect(() => {\r\n    api\r\n      .getInitialCards()\r\n      .then((data) => {\r\n        setCards(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка. Не удалось установить новые данные: \", err);\r\n      })\r\n    }, [setCards]);\r\n\r\n  /** Разметка контента страницы */\r\n  return (\r\n    <main className=\"content page__content\">\r\n      <div className=\"profile page__section\">\r\n        <div className=\"profile__container\">\r\n          <div className=\"profile__userpic\">\r\n            <div\r\n              className=\"profile__edit\"\r\n              onClick={props.onEditAvatar}\r\n              tabIndex=\"0\"\r\n            ></div>\r\n            <img\r\n              src={userAvatar}\r\n              alt=\"Аватар автора\"\r\n              className=\"profile__image\"\r\n            />\r\n          </div>\r\n          <div className=\"profile__user\">\r\n            <h2 className=\"profile__user-name\">{userName}</h2>\r\n            <p className=\"profile__user-job\">{userDescription}</p>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            title=\"Редактирование профиля\"\r\n            onClick={props.onEditProfile}\r\n            className=\"button button_type_edit-profile button_style_primary\"\r\n          />\r\n        </div>\r\n        <div className=\"profile__add-post\">\r\n          <button\r\n            type=\"button\"\r\n            title=\"Добавить фото\"\r\n            onClick={props.onAddPlace}\r\n            className=\"button button_type_add-photo button_style_primary\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"elements page__section\">\r\n        <ul className=\"elements__container\">\r\n          {isLoading \r\n            ? <Spinner />\r\n            : cards.map((card) => {\r\n              return (\r\n                <Card card={card} key={card._id} onCardClick={props.onCardClick}/>\r\n              );\r\n            })\r\n          }\r\n        </ul>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n/** Компонент \"Футер\" */\r\nexport default function Footer() {\r\n  /** Разметка футера */\r\n  return (\r\n    <footer className=\"footer page__footer page__section\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\n\r\n/** Компонент \"Попап просмотра фото\" */\r\nexport default function ImagePopup(props) {\r\n  /** Разметка попапа просмотра фото */\r\n  return (\r\n    <div id=\"popupViewPhoto\" className={`popup popup_style_view ${props.card && \"popup_opened\"}`}>\r\n      <div className=\"popup__container\">\r\n        <button\r\n          name=\"viewPhotoClose\"\r\n          type=\"button\"\r\n          title=\"Закрыть окно\"\r\n          onClick={props.onClose}\r\n          className=\"popup__close\"\r\n        />\r\n        <div className=\"popup__view\">\r\n          <img \r\n            src={props.card && props.card.link} \r\n            alt={props.card && props.card.name} \r\n            className=\"popup__photo\" />\r\n          <p className=\"popup__photo-title\">{props.card && props.card.name}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React from \"react\";\r\n\r\n/** Компонент \"Попап с формой\" */\r\nexport default function PopupWithForm(props) {\r\n  /** Разметка попапа с формой */\r\n  return (\r\n    <div\r\n      id={props.name}\r\n      className={`popup popup_style_form ${props.isOpen && \"popup_opened\"}`}\r\n    >\r\n      <div className=\"popup__container\">\r\n        <button\r\n          name=\"editProfileClose\"\r\n          type=\"button\"\r\n          title=\"Закрыть окно\"\r\n          onClick={props.onClose}\r\n          className=\"popup__close\"\r\n        />\r\n        <form\r\n          action=\"#\"\r\n          method=\"POST\"\r\n          name={props.name}\r\n          noValidate\r\n          onSubmit={props.onClose}\r\n          className=\"popup__form\"\r\n        >\r\n          <h2 className=\"popup__title\">{props.title}</h2>\r\n          {props.children}\r\n          <input\r\n            name={`${props.name}Submit`}\r\n            type=\"submit\"\r\n            value={props.submitValue}\r\n            className=\"popup__submit\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\n\r\n/** Компонент \"Инпут\" */\r\nexport default function Input(props) {\r\n  /** Разметка инпута */\r\n  return (\r\n    <label className=\"popup__form-field\">\r\n      <input\r\n        id={`input-${props.name}`}\r\n        type={props.type}\r\n        required={props.isRequired}\r\n        minLength={props.minLength}\r\n        maxLength={props.maxLength}\r\n        pattern={props.pattern}\r\n        placeholder={props.placeholder}\r\n        className=\"popup__input\"\r\n      />\r\n      <span id={`input-${props.name}-error`} className=\"popup__input-error\"></span>\r\n    </label>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Footer from '../Footer/Footer';\nimport ImagePopup from '../Popups/ImagePopup';\nimport PopupWithForm from '../Popups/PopupWithForm';\nimport Input from '../Input/Input';\n\n/** Основной компонент страницы */\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState();\n\n  /** Функция закрытия попапов */\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard('');\n  }\n\n  /** Функция обработки клика по карточке */\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  /** Основная разметка */\n  return (\n    <div className=\"page__container\">\n      <Header />\n      <Main \n        onEditProfile={() => {\n          setIsEditProfilePopupOpen(true);\n        }} \n        onEditAvatar={() => {\n          setIsEditAvatarPopupOpen(true);\n        }}\n        onAddPlace={() => {\n          setIsAddPlacePopupOpen(true);\n        }}\n        onCardClick={(card) => {\n          handleCardClick(card);\n        }}\n        />\n      <Footer />\n      <PopupWithForm\n        name=\"editProfile\"\n        title=\"Редактировать профиль\"\n        submitValue = \"Сохранить\"\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}>\n        <Input\n          name=\"userName\"\n          type=\"text\"\n          minLength=\"2\"\n          maxLength=\"40\"\n          pattern=\"^[A-Za-zА-Яа-яЁё\\s-]+$\"\n          placeholder=\"Имя пользователя\"\n          isRequired={true}\n        />\n        <Input\n          name=\"userJob\"\n          type=\"text\"\n          minLength=\"2\"\n          maxLength=\"200\"\n          placeholder=\"О себе\"\n          isRequired={true}\n        />\n      </PopupWithForm>\n      <PopupWithForm\n        name=\"editAvatar\"\n        title=\"Обновить аватар\"\n        submitValue = \"Сохранить\"\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}>\n        <Input\n          name=\"avatar\"\n          type=\"url\"\n          placeholder=\"Ссылка на новый аватар\"\n          isRequired={true}\n        />\n      </PopupWithForm>\n      <PopupWithForm\n        name=\"addPhoto\"\n        title=\"Новое место\"\n        submitValue = \"Сохранить\"\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}>\n        <Input\n          name=\"photoTitle\"\n          type=\"text\"\n          minLength=\"2\"\n          maxLength=\"30\"\n          placeholder=\"Название\"\n          isRequired={true}\n        />\n        <Input\n        name=\"photoLink\"\n        type=\"url\"\n        placeholder=\"Ссылка на картинку\"\n        isRequired={true}\n      />\n      </PopupWithForm>\n      <ImagePopup \n        card={selectedCard}\n        onClose={closeAllPopups}\n      />\n      <PopupWithForm\n        name=\"deleteCard\"\n        title=\"Вы уверены?\"\n        submitValue = \"Да\"\n        isOpen={false}\n        onClose={closeAllPopups}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}